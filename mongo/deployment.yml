
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongo-data-pv
  labels:
    type: local
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mongo_data/":

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-vol-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"mongo","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mongo","tier":"backend","track":"stable"}},"template":{"metadata":{"labels":{"app":"mongo","tier":"backend","track":"stable"}},"spec":{"containers":[{"env":[{"name":"MONGO_INITDB_DATABASE","value":"provisioning"}],"image":"saurav7055/mongo:v1","name":"mongo","ports":[{"containerPort":27017,"name":"http"}],"volumeMounts":[{"mountPath":"/data/db","name":"mongo-persistent-storage"}]}],"volumes":[{"name":"mongo-persistent-storage","persistentVolumeClaim":{"claimName":"mongo-vol-claim"}}]}}}}
  creationTimestamp: null
  generation: 1
  name: mongo
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/mongo
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mongo
      tier: backend
      track: stable
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo
        tier: backend
        track: stable
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_DATABASE
          value: provisioning
        image: saurav7055/mongo:v1
        imagePullPolicy: IfNotPresent
        name: mongo
        ports:
        - containerPort: 27017
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-vol-claim
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"mongo","namespace":"default"},"spec":{"ports":[{"port":27017,"protocol":"TCP","targetPort":"http"}],"selector":{"app":"mongo","tier":"backend"}}}
  creationTimestamp: null
  name: mongo
  selfLink: /api/v1/namespaces/default/services/mongo
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: http
  selector:
    app: mongo
    tier: backend
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

